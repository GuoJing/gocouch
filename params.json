{
  "name": "Gocouchdb",
  "tagline": "yet another couchdb go client.",
  "body": "This project is in developing...\r\n\r\nYet another CouchDB GO Client\r\n\r\n0.1 is for core API\r\n\r\n## Quick start\r\n\r\n    // Client is your friend\r\n    // Use Client everywhere you want :)\r\n\r\n    import (\r\n        \"github.com/GuoJing/gocouchDB\"\r\n    )\r\n\r\n    dsn := \"http://localhost:5984\"\r\n    client := gocouchDB.NewClientByDSN(dsn)\r\n\r\n    db, err := client.GetDatabase(\"duidui\")\r\n\r\n    if err != nil {}\r\n\r\n    doc, err := db.GetDocument(\"test\")\r\n\r\n    body := map[string]interface{} {\r\n        \"title\" : \"Haha223334444\",\r\n        \"body\"  : \"Not at all\",\r\n    }\r\n\r\n    doc.Update(body)\r\n\r\n    // Or\r\n    // doc.Delete()\r\n\r\n## Transport\r\n\r\n    //interface ITransport! <- you can do it yourself\r\n    transport := NewTransport(dsn)\r\n\r\n    client := gocouchDB.NewClientByTransport(transport)\r\n\r\n## Visit without Client\r\n\r\n    transport := NewTransport(dsn)\r\n    db := NewDatabase(dbName, transport)\r\n    doc, err := db.GetDocument(Name)\r\n\r\n    doc = NewDocument(dbName, Name, transport)\r\n    doc.Delete()\r\n\r\n## Auth\r\n\r\n    client := gocouchDB.NewClientByDSN(dsn)\r\n    client.SetAuth(Username, Password)\r\n    client.GetDatabase(\"duidui\")\r\n    // ...\r\n\r\n    // or\r\n\r\n    transport := NewTransport(dsn)\r\n    db := NewDatabase(dbName, transport)\r\n    db.SetAuth(Username, Password)\r\n    db.GetDocument(\"doc\")\r\n    // ...\r\n\r\n## Replicate\r\n\r\n    task := new(gocouchDB.ReplicateTask)\r\n    task.Continuous = false\r\n    task.CreateTarget = true\r\n    task.Source = \"duidui\"\r\n    task.Target = \"duidui_backup\"\r\n\r\n    ret, err := client.Replicate(task)\r\n\r\n\r\n## do function\r\n\r\n    // You could do anything with do\r\n    // this is ClientBase\r\n    // you can do that in every Class\r\n    // like Database, Document...\r\n    // Here we call this cl\r\n    // if we need a couchdb interface like:\r\n    // dsn/_replicate?param1=value1\r\n\r\n    body = map[string]interface{} {\r\n        \"source\": \"source_db\",\r\n        \"target\": \"target_db\",\r\n    }\r\n\r\n    params = map[string]string {\r\n        \"param1\": \"value1\"\r\n    }\r\n\r\n    cl.do(POST, \"_replicate\", body, params)\r\n\r\n    // you could see Compact in Database class\r\n    // everything is using do function (but _all_dbs)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}